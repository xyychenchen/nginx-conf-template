#NGINX高大全配置版本，不需要的自己删就行~

server {
    #listen [::]:80; # 如果不开启ipv6可以注释掉
    listen 80;
    server_name example.com;

    # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
    location / {
        return 301 https://$host$request_uri;
    }
}


server {
    listen 443 ssl;
    #listen [::]:443 ssl; #不开启ipv6就注释掉

    server_tokens off;
    keepalive_timeout 5;    

    server_name example.com;
    root /var/www/html/;

    access_log /etc/nginx/logs/example.log;
    error_log /etc/nginx/logs/example.error.log;    

    #这个设置是为了防止点击劫持攻击。点击劫持是一种攻击，攻击者在用户不知情的情况下通过一个隐藏的iframe来诱导用户点击。X-Frame-Options响应头可以控制网站是否允许被嵌#入到 iframe 或 frame 中。SAMEORIGIN：仅允许当前站点的页面将该页面用作 iframe。这意味着该页面不能被其他域的页面嵌入，这样可以防止点击劫持攻击。

    add_header X-Frame-Options "SAMEORIGIN";

    #这个设置用来防止浏览器对响应内容的 MIME 类型进行嗅探。MIME 类型嗅探是浏览器的一种行为，当响应头中的 Content-Type #与实际内容不匹配时，浏览器会尝试自己猜测真正的内容类型。nosniff：告诉浏览器不要嗅探响应的内容类型。这意味着浏览器将严格按照服务器声明的 Content-Type #头处理返回的内容。这有助于防止基于 MIME 类型混淆的攻击，如 XSS 攻击。

    add_header X-Content-Type-Options "nosniff";

    index index.php index.html;

    ssl_certificate /path/to/your/example.com.pem; #填写您的证书文件名称，
    ssl_certificate_key /path/to/your/example.com.key; #填写您的私钥文件名称，  

    ssl_session_timeout 5m;
    ssl_protocols TLSv1.2 TLSv1.3;  # 可参考此 SSL 协议进行配置
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
    #可按照此加密套件配置，写法遵循 openssl 标准
    ssl_prefer_server_ciphers off;    

    charset utf-8;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    error_page 404 /index.php;

    #以下最好参考一下'/etc/nginx/sites-available/default'里的配置进行更改

    location ~ \.php$ {
        fastcgi_pass unix:/var/run/php/php8.2-fpm.sock; #根据自己的PHP版本设置 
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
        #include fastcgi.conf;
        client_max_body_size 20m;
        fastcgi_connect_timeout 30s;
        fastcgi_send_timeout 30s;
        fastcgi_read_timeout 30s;
        fastcgi_intercept_errors on;
    }

    location ~ /\.(?!well-known).* {
        deny all;
    }


    location ~ ^\. {
        deny all;
    }

    location ~ \.sqlite$ {
        deny all;
    }

    location ~ \.env$ {
        deny all;
    }

    location ~ /\.htaccess {
        allow all;
    }

}
